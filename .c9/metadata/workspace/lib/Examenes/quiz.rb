{"changed":true,"filter":false,"title":"quiz.rb","tooltip":"/lib/Examenes/quiz.rb","value":"# -*- coding: utf-8 -*-\n\nrequire 'rubygems'\nrequire 'bundler/setup'\nrequire 'rspec'\n\n\nmodule Examenes\n    \n    class Quiz\n        attr_accessor :exam, :name\n            \n        def initialize(name = \"Sin Nombre\", &block)\n            @exam = ExamenCompleto.new(List.new)\n            @name = name\n            \n            instance_eval &block\n        end\n        \n        def question(text, options = {})\n            distractors = []\n            distractors << options[:wrong] while options[:wrong]\n            \n            if(options[:right] == 'FALSE' || options[:right] == 'TRUE')\n                add(:type => 0, :text => text, :right => options[:right])\n            elsif\n                add(:type => 1, :text => text, :right => options[:right] , :distractor => distractors )\n            end\n        end\n        \n        def add(args) #AÃ±ade una pregunta al examen\n            if args[:type] == 1 #La pregunta es SimpleChoice\n                q = PreguntaSimple.new(\n                    :text => args[:text],\n                    :right => args[:right],\n                    :distractor => args[:distractor])\n            elsif args[:type] == 0 #La pregunta es TrueFalse\n                q = VerdaderoFalso.new(\n                    :text => args[:text],\n                    :right => args[:right])\n            end\n            \n            (@exam.list).push(:elm => [q])\n        end\n        \n        def check(resp)\n            resul = []\n            i=0\n            (@exam.order).each do |quest|\n                resul << (resp[i] == quest.right)\n                i += 1\n            end\n            resul\n        end\n        \n        def show\n            @name + @exam.show\n        end\n\n        def show_i\n            @name + @exam.show_i\n        end\n\n        def right\n            :right\n        end\n\n        def wrong\n            :wrong\n        end\n    end\nend    ","undoManager":{"mark":9,"position":-1,"stack":[[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":34},"action":"remove","lines":["ExamenCompleto"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["P"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":22},"end":{"row":13,"column":23},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":23},"action":"remove","lines":["Pre"]},{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"remove","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["P"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":22},"end":{"row":13,"column":23},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":20},"end":{"row":13,"column":23},"action":"remove","lines":["Pre"]},{"start":{"row":13,"column":20},"end":{"row":13,"column":34},"action":"insert","lines":["PreguntaSimple"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":20},"end":{"row":13,"column":34},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1418235445172}